// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    And16(a =false, b=in, out=zero);
    Or(a= load, b= reset, out= sel1); // sel1 = reset|load
    Not(in= load, out= notload);
    And(a= notload, b= inc, out= and1);
    Or(a= reset, b= and1, out= sel0);  // sel0 = reset | (~load & inc)
    Or(a= sel1, b= inc, out= regload);  // regload = reset | inc | load
    Mux4Way16(a= out0, b= outinc, c= in, d= zero, sel[1]= sel1, sel[0]= sel0, out= regin);
    Register(in= regin, load= regload, out= out0, out= out1, out = out);
    Inc16(in= out1, out= outinc);
}
